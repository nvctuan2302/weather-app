!function c(i,u,a){function l(e,t){if(!u[e]){if(!i[e]){var n="function"==typeof require&&require;if(!t&&n)return n(e,!0);if(d)return d(e,!0);var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}var o=u[e]={exports:{}};i[e][0].call(o.exports,function(t){return l(i[e][1][t]||t)},o,o.exports,c,i,u,a)}return u[e].exports}for(var d="function"==typeof require&&require,t=0;t<a.length;t++)l(a[t]);return l}({1:[function(t,e,n){"use strict";function d(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}window.addEventListener("DOMContentLoaded",function(){function n(){return t.innerHTML="".concat(a.filter(function(t){return!1===t.completed}).length)}var e=document.querySelector(".js-todo-new"),t=document.querySelector(".js-count-todos"),r=document.querySelector(".js-clear-todos"),o=document.querySelector(".js-content"),c=document.querySelector(".js-active"),i=document.querySelector(".js-completed"),u=d(document.querySelectorAll(".js-todo-action-item")),a=localStorage.getItem("todoList")?JSON.parse(localStorage.getItem("todoList")):[];u.forEach(function(t){t.addEventListener("click",function(){switch(f(o),t.querySelector("input").value){case"active":v(a.filter(function(t){return!1===t.completed}),o);break;case"completed":v(a.filter(function(t){return!0===t.completed}),o);break;default:v(a,o)}})}),e.addEventListener("keyup",function(t){0===a.length&&(l=1),13===t.keyCode&&""!==e.value&&(a.push({completed:!1,content:e.value,id:l}),!1===i.checked&&s(!1,e.value,l++,o),p(a),e.value="",n())}),h(document,"click",".js-btn-remove",function(t){var e=t.target.closest(".todo-list__item");e.remove(),a=a.filter(function(t){return t.id!==Number(e.dataset.id)}),l=y(a),n(),p(a)}),r.addEventListener("click",function(){a=a.filter(function(t){return!1===t.completed}),f(o),p(a),v(a,o),n()}),h(document,"dblclick",".js-content",function(t){var e=t.target.closest(".todo-list__item");t.target.disabled=!1,g(e,function(){m(a,e,t.target.value),t.target.disabled=!0})}),h(document,"keyup",".js-content",function(t){var e=t.target.closest(".todo-list__item");13===t.keyCode&&""!==t.target.value&&(m(a,e,t.target.value),t.target.disabled=!0)}),h(document,"change",".js-checkbox",function(t){var e=t.target.closest(".todo-list__item");m(a,e,t.target.checked),(c.checked||i.checked)&&e.remove(),n()});var l=y(a);v(a,o),n()});var s=function(t,e,n,r){var o='    \n    <li class="u-flex-center todo-list__item" data-id="'.concat(n,'" >\n      <div style ="width: 100%;"> \n        <input type="checkbox" class="input-checkbox js-checkbox" ').concat(!0===t?t="checked":"",' >\n        <input type="text" class="input-text js-content" disabled value="').concat(e,'" >\n      </div>\n      <button class="button js-btn-remove" >&#x2716</button>\n    </li>');r.insertAdjacentHTML("afterbegin",o)},f=function(t){for(;t.firstChild;)t.removeChild(t.firstChild)},m=function(t,e,n){t.find(function(t){t.id===Number(e.dataset.id)&&(!0===n||!1===n?t.completed=n:t.content=n)}),p(t)},v=function(t,e){t.forEach(function(t){s(t.completed,t.content,t.id,e)})},p=function(t){return localStorage.setItem("todoList",JSON.stringify(t))},y=function(t){return Math.max.apply(Math,t.map(function(t){return t.id}))+1},g=function(n,r){function t(t){var e;!n.contains(t.target)&&((e=n)&&(e.offsetWidth||e.offsetHeight||e.getClientRects().length))&&(r(),o())}var o=function(){document.removeEventListener("click",t)};document.addEventListener("click",t)},h=function(u,t,a,l){u.addEventListener(t,function(t){for(var e=u.querySelectorAll(a),n=t.target,r=0,o=e.length;r<o;r++)for(var c=n,i=e[r];c&&c!==u;){if(c===i)return l.call(i,t);c=c.parentNode}})}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
